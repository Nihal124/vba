Sub RunPythonScript()
    Dim PythonScriptPath As String
    PythonScriptPath = "C:\VS Code\Final_code_split_file_automation.py"

    Dim userInput As String
    userInput = InputBox("Do you want to run the Python script (y/n)?", "User Input")

    If LCase(userInput) = "y" Then
        ' Disable Excel's display alerts temporarily
        Application.DisplayAlerts = False

        ' Construct the command to run the Python script in the background
        Dim cmd As String
        cmd = "py.exe """ & PythonScriptPath & """"

        ' Use the Shell function to run the command and hide the window
        Dim pid As Double
        pid = Shell(cmd, vbHide)

        ' Wait for the Python script to finish
        Application.Wait (Now + TimeValue("00:00:05")) ' Adjust the waiting time as needed

        ' Re-enable Excel's display alerts
        Application.DisplayAlerts = True

        ' Check if the Python script is still running (optional)
        If Not ProcessRunning(pid) Then
            MsgBox "Python script executed successfully in the background."
        Else
            MsgBox "Error executing Python script."
        End If
    ElseIf LCase(userInput) = "n" Then
        MsgBox "Python script execution canceled by user."
    Else
        MsgBox "Invalid input. Please enter 'y' to run the script or 'n' to cancel."
    End If
End Sub

Function ProcessRunning(pid As Double) As Boolean
    On Error Resume Next
    Dim process As Object
    Set process = GetObject("winmgmts:").ExecQuery("SELECT * FROM Win32_Process WHERE ProcessID=" & CLng(pid))
    If process.Count > 0 Then
        ProcessRunning = True
    Else
        ProcessRunning = False
    End If
    On Error GoTo 0
End Function
